{"version":3,"file":"toggle.min.js","sources":["../src/toggle.js"],"sourcesContent":["/*\n * Modul JavaScript untuk mengelola tampilan aktivitas pada halaman kursus Moodle berdasarkan Mode Ujian.\n * Menyembunyikan aktivitas non-ujian saat mode ujian aktif, kecuali untuk pengguna dengan hak khusus (capability).\n *\n * @module local_mode_ujian/toogle\n */\n\ndefine(['jquery'], function($) {\n    return {\n        /\n         * Entry point utama untuk menginisialisasi logika Mode Ujian.\n         *\n         * @param {number|string} courseid - ID kursus Moodle.\n         * @param {string} status - Status awal mode ujian ('0' untuk non-ujian, '1' untuk mode ujian).\n         * @param {boolean} hascap - Apakah pengguna memiliki kemampuan khusus (misalnya: admin/dosen).\n         */\n        init: function(courseid, status, hascap) {\n            const isAllowed = hascap;\n\n            /\n             * Menerapkan logika penyembunyian/tampilan aktivitas berdasarkan status mode ujian.\n             *\n             * @param {string} status - Status mode ujian ('0' = non-ujian, '1' = mode ujian).\n             */\n            function applyModeUjian(status) {\n                $('.course-content .activity').each(function() {\n                    const $activity = $(this);\n                    const modtype = $activity.attr('class');\n                    const isQuiz = modtype.includes('modtype_quiz');\n                    const instanceName = $activity.find('.instancename').text().trim().toUpperCase();\n                    const isExam = isQuiz && ['UTS', 'UAS', 'EXAM'].some(keyword => instanceName.includes(keyword));\n\n                    if (status == '1') {\n                        if (isQuiz) {\n                            if (isExam || isAllowed) {\n                                $activity.show();\n                            } else {\n                                $activity.hide();\n                            }\n                        } else {\n                            if (isAllowed) {\n                                $activity.show();\n                            } else {\n                                $activity.hide();\n                            }\n                        }\n                    } else {\n                        $activity.show();\n                    }\n                });\n            }\n\n            /*\n             * Memastikan applyModeUjian dijalankan berulang beberapa kali untuk mengantisipasi konten dinamis.\n             *\n             * @param {string} status - Status mode ujian yang diterapkan.\n             * @param {number} [attempts=0] - Jumlah percobaan pemanggilan (maksimal 10 kali).\n             */\n            function ensureApply(status, attempts = 0) {\n                applyModeUjian(status);\n                if (attempts < 10) {\n                    setTimeout(() => ensureApply(status, attempts + 1), 300);\n                }\n            }\n\n            ensureApply(status);\n\n            // Menambahkan toggle ke dalam navigasi\n            const toggleWrapper = document.getElementById('mode-ujian-toggle');\n            if (toggleWrapper) {\n                const navTabs = document.querySelector('.secondary-navigation') || document.querySelector('.nav-tabs');\n                if (navTabs) {\n                    const wrapper = document.createElement('div');\n                    wrapper.style.display = 'flex';\n                    wrapper.style.justifyContent = 'flex-end';\n                    wrapper.style.margin = '2px 6px';\n                    wrapper.appendChild(toggleWrapper);\n                    navTabs.parentNode.insertBefore(wrapper, navTabs.nextSibling);\n                }\n            }\n\n            // Menambahkan observer untuk memantau perubahan DOM dan menerapkan ulang mode ujian\n            const observerTarget = document.querySelector('.course-content');\n            if (observerTarget) {\n                const observer = new MutationObserver(() => {\n                    const current = document.querySelector('input[name=\"exam_mode\"]:checked');\n                    if (current) {\n                        applyModeUjian(current.value);\n                    }\n                });\n                observer.observe(observerTarget, { childList: true, subtree: true });\n            }\n\n            // Menambahkan event listener pada input radio untuk mengubah status mode ujian\n            document.querySelectorAll('input[name=\"exam_mode\"]').forEach(input => {\n                input.addEventListener('change', function() {\n                    const newstatus = this.value;\n                    fetch(M.cfg.wwwroot + '/local/mode_ujian/save_mode_ujian.php', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/x-www-form-urlencoded'\n                        },\n                        body: 'courseid=' + courseid + '&status=' + newstatus\n                    })\n                    .then(res => res.json())\n                    .then(data => {\n                        if (data.success) {\n                            ensureApply(newstatus);\n                        } else {\n                            // Gagal update status mode ujian, log bisa ditambahkan jika diperlukan.\n                        }\n                    })\n                    .catch(() => {\n                        // Error saat menyimpan status mode ujian, bisa tambahkan notifikasi jika perlu.\n                    });\n                });\n            });\n        }\n    };\n});\n"],"names":["define","$","init","courseid","status","hascap","isAllowed","applyModeUjian","each","$activity","this","isQuiz","attr","includes","instanceName","find","text","trim","toUpperCase","isExam","some","keyword","show","hide","ensureApply","attempts","setTimeout","toggleWrapper","document","getElementById","navTabs","querySelector","wrapper","createElement","style","display","justifyContent","margin","appendChild","parentNode","insertBefore","nextSibling","observerTarget","MutationObserver","current","value","observe","childList","subtree","querySelectorAll","forEach","input","addEventListener","newstatus","fetch","M","cfg","wwwroot","method","headers","body","then","res","json","data","success","catch"],"mappings":"AAOAA,iCAAO,CAAC,WAAW,SAASC,SACjB,CAQHC,KAAM,SAASC,SAAUC,OAAQC,cACvBC,UAAYD,gBAOTE,eAAeH,QACpBH,EAAE,6BAA6BO,MAAK,iBAC1BC,UAAYR,EAAES,MAEdC,OADUF,UAAUG,KAAK,SACRC,SAAS,gBAC1BC,aAAeL,UAAUM,KAAK,iBAAiBC,OAAOC,OAAOC,cAC7DC,OAASR,QAAU,CAAC,MAAO,MAAO,QAAQS,MAAKC,SAAWP,aAAaD,SAASQ,WAExE,KAAVjB,OACIO,OACIQ,QAAUb,UACVG,UAAUa,OAEVb,UAAUc,OAGVjB,UACAG,UAAUa,OAEVb,UAAUc,OAIlBd,UAAUa,mBAWbE,YAAYpB,YAAQqB,gEAAW,EACpClB,eAAeH,QACXqB,SAAW,IACXC,YAAW,IAAMF,YAAYpB,OAAQqB,SAAW,IAAI,KAI5DD,YAAYpB,cAGNuB,cAAgBC,SAASC,eAAe,wBAC1CF,cAAe,OACTG,QAAUF,SAASG,cAAc,0BAA4BH,SAASG,cAAc,gBACtFD,QAAS,OACHE,QAAUJ,SAASK,cAAc,OACvCD,QAAQE,MAAMC,QAAU,OACxBH,QAAQE,MAAME,eAAiB,WAC/BJ,QAAQE,MAAMG,OAAS,UACvBL,QAAQM,YAAYX,eACpBG,QAAQS,WAAWC,aAAaR,QAASF,QAAQW,oBAKnDC,eAAiBd,SAASG,cAAc,sBAC1CW,eAAgB,CACC,IAAIC,kBAAiB,WAC5BC,QAAUhB,SAASG,cAAc,mCACnCa,SACArC,eAAeqC,QAAQC,UAGtBC,QAAQJ,eAAgB,CAAEK,WAAW,EAAMC,SAAS,IAIjEpB,SAASqB,iBAAiB,2BAA2BC,SAAQC,QACzDA,MAAMC,iBAAiB,UAAU,iBACvBC,UAAY3C,KAAKmC,MACvBS,MAAMC,EAAEC,IAAIC,QAAU,wCAAyC,CAC3DC,OAAQ,OACRC,QAAS,gBACW,qCAEpBC,KAAM,YAAczD,SAAW,WAAakD,YAE/CQ,MAAKC,KAAOA,IAAIC,SAChBF,MAAKG,OACEA,KAAKC,SACLzC,YAAY6B,cAKnBa,OAAM"}